using BankomatAccounts;using BankomatClients;using System;using System.Collections.Generic;using System.Security.Claims;using System.Threading.Channels;namespace Bankomat{    public class Bank    {        protected List<Account> accounts;        public Bank(List<Account> accounts) { this.accounts = accounts; }        public Bank() : this(new List<Account>()) { }        public List<Account> Accounts        {            get { return accounts; }            set { accounts = value; }        }        public void OpenAccount()        {            Account newAccount = new Account();            Client newClient = new Client();            accounts.Add(newAccount);            newClient.Id = accounts.Count - 1;            Random random = new Random();            newAccount.AccountNumber = $"{random.Next(1000, 9999)} {random.Next(1000, 9999)} {random.Next(1000, 9999)} {random.Next(1000, 9999)}";            Console.Write($"Enter password for your account with ID [{newClient.Id}]: ");            newAccount.Password = Console.ReadLine();            Console.WriteLine("Success! The account is opened.");            Console.WriteLine("Account number: " + newAccount.AccountNumber);            Console.WriteLine("Password: " + newAccount.Password);        }
        public void OpenAccount(string password)        {            Account newAccount = new Account();            Client newClient = new Client();            accounts.Add(newAccount);            newClient.Id = accounts.Count - 1;            Random random = new Random();            newAccount.AccountNumber = $"{random.Next(1000, 9999)} {random.Next(1000, 9999)} {random.Next(1000, 9999)} {random.Next(1000, 9999)}";            newAccount.Password = password;            Console.WriteLine("Success! The account is opened.");            Console.WriteLine("Account number: " + newAccount.AccountNumber);            Console.WriteLine("Password: " + newAccount.Password);        }        public string GetAccountNumber(int clientId)  { return accounts[clientId].AccountNumber; }        public string GetPassword(int clientId) { return accounts[clientId].Password; }        public void Deposit(int clientId, double amount) { accounts[clientId].Balance += amount; }        public void Withdraw(int clientId, double amount) { accounts[clientId].Balance -= amount; }    }}